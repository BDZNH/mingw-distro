diff -aurN coreutils-8.17/configure coreutils-8.17-fixed/configure
--- coreutils-8.17/configure	2012-05-10 10:17:46 -0700
+++ coreutils-8.17-fixed/configure	2012-06-17 04:33:33 -0700
@@ -39860,17 +39860,7 @@
   esac
 fi
 
-if test -z "$ac_list_mounted_fs"; then
-  as_fn_error $? "could not determine how to read list of mounted file systems" "$LINENO" 5
-  # FIXME -- no need to abort building the whole package
-  # Can't build mountlist.c or anything that needs its functions
-fi
-
-if test $ac_list_mounted_fs = found; then :
-  gl_cv_list_mounted_fs=yes
-else
   gl_cv_list_mounted_fs=no
-fi
 
 
 
diff -aurN coreutils-8.17/lib/c-strtod.c coreutils-8.17-fixed/lib/c-strtod.c
--- coreutils-8.17/lib/c-strtod.c	2012-01-05 23:20:50 -0800
+++ coreutils-8.17-fixed/lib/c-strtod.c	2012-06-17 04:33:33 -0700
@@ -26,7 +26,7 @@
 #include <stdlib.h>
 #include <string.h>
 
-#if LONG
+#if LONGCAT
 # define C_STRTOD c_strtold
 # define DOUBLE long double
 # define STRTOD_L strtold_l
@@ -37,7 +37,7 @@
 #endif
 
 /* c_strtold falls back on strtod if strtold doesn't conform to C99.  */
-#if LONG && HAVE_C99_STRTOLD
+#if LONGCAT && HAVE_C99_STRTOLD
 # define STRTOD strtold
 #else
 # define STRTOD strtod
diff -aurN coreutils-8.17/lib/c-strtold.c coreutils-8.17-fixed/lib/c-strtold.c
--- coreutils-8.17/lib/c-strtold.c	2011-04-24 10:21:45 -0700
+++ coreutils-8.17-fixed/lib/c-strtold.c	2012-06-17 04:33:33 -0700
@@ -1,2 +1,2 @@
-#define LONG 1
+#define LONGCAT 1
 #include "c-strtod.c"
diff -aurN coreutils-8.17/lib/gethostname.c coreutils-8.17-fixed/lib/gethostname.c
--- coreutils-8.17/lib/gethostname.c	2012-01-05 23:20:50 -0800
+++ coreutils-8.17-fixed/lib/gethostname.c	2012-06-17 04:33:33 -0700
@@ -87,8 +87,9 @@
 #undef gethostname
 
 int
-rpl_gethostname (char *name, size_t len)
+PASCAL rpl_gethostname (char *name, int int_len)
 {
+  size_t len = (size_t) int_len;
   int r;
 
   if (len > INT_MAX)
diff -aurN coreutils-8.17/lib/randread.c coreutils-8.17-fixed/lib/randread.c
--- coreutils-8.17/lib/randread.c	2012-03-24 11:22:13 -0700
+++ coreutils-8.17-fixed/lib/randread.c	2012-06-17 04:33:33 -0700
@@ -176,9 +176,6 @@
     }
   ISAAC_SEED (struct timeval, gettimeofday (&v, NULL));
   ISAAC_SEED (pid_t, v = getpid ());
-  ISAAC_SEED (pid_t, v = getppid ());
-  ISAAC_SEED (uid_t, v = getuid ());
-  ISAAC_SEED (uid_t, v = getgid ());
 
 #ifdef lint
   /* Normally we like having the extra randomness from uninitialized
diff -aurN coreutils-8.17/lib/unistd.in.h coreutils-8.17-fixed/lib/unistd.in.h
--- coreutils-8.17/lib/unistd.in.h	2012-05-04 02:04:48 -0700
+++ coreutils-8.17-fixed/lib/unistd.in.h	2012-06-17 04:33:33 -0700
@@ -713,9 +713,9 @@
 #   undef gethostname
 #   define gethostname rpl_gethostname
 #  endif
-_GL_FUNCDECL_RPL (gethostname, int, (char *name, size_t len)
+_GL_FUNCDECL_RPL (gethostname, int PASCAL, (char *name, int len)
                                     _GL_ARG_NONNULL ((1)));
-_GL_CXXALIAS_RPL (gethostname, int, (char *name, size_t len));
+_GL_CXXALIAS_RPL (gethostname, int PASCAL, (char *name, int len));
 # else
 #  if !@HAVE_GETHOSTNAME@
 _GL_FUNCDECL_SYS (gethostname, int, (char *name, size_t len)
diff -aurN coreutils-8.17/lib/xstrtod.c coreutils-8.17-fixed/lib/xstrtod.c
--- coreutils-8.17/lib/xstrtod.c	2012-01-05 23:20:50 -0800
+++ coreutils-8.17-fixed/lib/xstrtod.c	2012-06-17 04:33:33 -0700
@@ -26,7 +26,7 @@
 #include <limits.h>
 #include <stdio.h>
 
-#if LONG
+#if LONGCAT
 # define XSTRTOD xstrtold
 # define DOUBLE long double
 #else
diff -aurN coreutils-8.17/lib/xstrtold.c coreutils-8.17-fixed/lib/xstrtold.c
--- coreutils-8.17/lib/xstrtold.c	2011-04-24 10:21:45 -0700
+++ coreutils-8.17-fixed/lib/xstrtold.c	2012-06-17 04:33:33 -0700
@@ -1,2 +1,2 @@
-#define LONG 1
+#define LONGCAT 1
 #include "xstrtod.c"
diff -aurN coreutils-8.17/src/sort.c coreutils-8.17-fixed/src/sort.c
--- coreutils-8.17/src/sort.c	2012-05-04 03:06:22 -0700
+++ coreutils-8.17-fixed/src/sort.c	2012-06-17 04:33:33 -0700
@@ -26,7 +26,6 @@
 #include <pthread.h>
 #include <sys/resource.h>
 #include <sys/types.h>
-#include <sys/wait.h>
 #include <signal.h>
 #include "system.h"
 #include "argmatch.h"
@@ -443,8 +442,6 @@
   -c, --check, --check=diagnose-first  check for sorted input; do not sort\n\
   -C, --check=quiet, --check=silent  like -c, but do not report first bad line\
 \n\
-      --compress-program=PROG  compress temporaries with PROG;\n\
-                              decompress them with PROG -d\n\
 "), stdout);
       fputs (_("\
       --debug               annotate the part of the line used to sort,\n\
@@ -511,7 +508,6 @@
 enum
 {
   CHECK_OPTION = CHAR_MAX + 1,
-  COMPRESS_PROGRAM_OPTION,
   DEBUG_PROGRAM_OPTION,
   FILES0_FROM_OPTION,
   NMERGE_OPTION,
@@ -526,7 +522,6 @@
 {
   {"ignore-leading-blanks", no_argument, NULL, 'b'},
   {"check", optional_argument, NULL, CHECK_OPTION},
-  {"compress-program", required_argument, NULL, COMPRESS_PROGRAM_OPTION},
   {"debug", no_argument, NULL, DEBUG_PROGRAM_OPTION},
   {"dictionary-order", no_argument, NULL, 'd'},
   {"ignore-case", no_argument, NULL, 'f'},
@@ -687,21 +682,7 @@
 static pid_t
 reap (pid_t pid)
 {
-  int status;
-  pid_t cpid = waitpid ((pid ? pid : -1), &status, (pid ? 0 : WNOHANG));
-
-  if (cpid < 0)
-    error (SORT_FAILURE, errno, _("waiting for %s [-d]"),
-           compress_program);
-  else if (0 < cpid && (0 < pid || delete_proc (cpid)))
-    {
-      if (! WIFEXITED (status) || WEXITSTATUS (status))
-        error (SORT_FAILURE, 0, _("%s [-d] terminated abnormally"),
-               compress_program);
-      --nprocs;
-    }
-
-  return cpid;
+  exit(SORT_FAILURE);
 }
 
 /* TEMP represents a new process; add it to the process table.  Create
@@ -4136,7 +4117,7 @@
     static int const sig[] =
       {
         /* The usual suspects.  */
-        SIGALRM, SIGHUP, SIGINT, SIGPIPE, SIGQUIT, SIGTERM,
+        SIGINT, SIGTERM,
 #ifdef SIGPOLL
         SIGPOLL,
 #endif
@@ -4182,7 +4163,6 @@
         }
 #endif
   }
-  signal (SIGCHLD, SIG_DFL); /* Don't inherit CHLD handling from parent.  */
 
   /* The signal mask is known, so it is safe to invoke exit_cleanup.  */
   atexit (exit_cleanup);
@@ -4303,12 +4283,6 @@
           checkonly = c;
           break;
 
-        case COMPRESS_PROGRAM_OPTION:
-          if (compress_program && !STREQ (compress_program, optarg))
-            error (SORT_FAILURE, 0, _("multiple compress programs specified"));
-          compress_program = optarg;
-          break;
-
         case DEBUG_PROGRAM_OPTION:
           debug = true;
           break;
@@ -4642,8 +4616,8 @@
       sort (files, nfiles, outfile, nthreads);
     }
 
-  if (have_read_stdin && fclose (stdin) == EOF)
-    die (_("close failed"), "-");
+  if (have_read_stdin)
+    fclose (stdin);
 
   exit (EXIT_SUCCESS);
 }
diff -aurN coreutils-8.17/src/uniq.c coreutils-8.17-fixed/src/uniq.c
--- coreutils-8.17/src/uniq.c	2012-05-01 13:55:08 -0700
+++ coreutils-8.17-fixed/src/uniq.c	2012-06-17 04:33:33 -0700
@@ -391,9 +391,11 @@
     }
 
  closefiles:
-  if (ferror (stdin) || fclose (stdin) != 0)
+  if (ferror (stdin))
     error (EXIT_FAILURE, 0, _("error reading %s"), infile);
 
+  fclose (stdin);
+
   /* stdout is handled via the atexit-invoked close_stdout function.  */
 
   free (lb1.buffer);
diff -aurN coreutils-8.17/src/wc.c coreutils-8.17-fixed/src/wc.c
--- coreutils-8.17/src/wc.c	2012-05-02 01:31:47 -0700
+++ coreutils-8.17-fixed/src/wc.c	2012-06-17 04:33:33 -0700
@@ -499,7 +499,7 @@
     {
       have_read_stdin = true;
       if (O_BINARY && ! isatty (STDIN_FILENO))
-        xfreopen (NULL, "rb", stdin);
+        _setmode (STDIN_FILENO, _O_BINARY);
       return wc (STDIN_FILENO, file, fstatus);
     }
   else
